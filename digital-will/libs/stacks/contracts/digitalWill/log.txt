[0m[38;5;245m./tests/claim_test.ts => [0mEnsure that claiming is working! ... [0m[32mok[0m [0m[38;5;245m(30ms)[0m
[0m[38;5;245m./tests/will_test.ts => [0mEnsure that minting is working! ... [0m[32mok[0m [0m[38;5;245m(35ms)[0m
[0m[38;5;245m./tests/will_test.ts => [0mEnsure that owner is correct! ... [0m[32mok[0m [0m[38;5;245m(19ms)[0m
[0m[38;5;245m./tests/claim_test.ts => [0mEnsure that beneficiary cannot claim twice! ... [0m[32mok[0m [0m[38;5;245m(29ms)[0m
[0m[38;5;245m./tests/will_test.ts => [0mEnsure that only owner can transfer! ... [0m[32mok[0m [0m[38;5;245m(26ms)[0m
[0m[38;5;245m./tests/claim_test.ts => [0mEnsure that only beneficiary can claim! ... [0m[32mok[0m [0m[38;5;245m(20ms)[0m
[0m[38;5;245m./tests/claim_test.ts => [0mEnsure that claiming before time fails! ... [0m[32mok[0m [0m[38;5;245m(32ms)[0m
[0m[38;5;245m./tests/will_test.ts => [0mEnsure that transfer is working properly! ... [0m[32mok[0m [0m[38;5;245m(32ms)[0m

[0m[32mok[0m | 8 passed | 0 failed [0m[38;5;245m(145ms)[0m


----------------------------
Check out the pro tips to improve your testing process:

  $ clarinet test --watch
    Watch for file changes an re-run all tests.

  $ clarinet test --costs
    Run a cost analysis of the contracts covered by tests.

  $ clarinet test --coverage
    Measure test coverage with the LCOV tooling suite.

Once you are ready to test your contracts on a local developer network, run the following:

  $ clarinet integrate
    Deploy all contracts to a local dockerized blockchain setup (Devnet).

Find more information on testing with Clarinet here: https://docs.hiro.so/smart-contracts/clarinet#testing-with-clarinet
And learn more about local integration testing here: https://docs.hiro.so/smart-contracts/devnet
Disable these hints with the env var CLARINET_DISABLE_HINTS=1
----------------------------
